name: run-tests

on:
  push:
    branches:
      - main
      - '*.x'
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [8.3, 8.2]
        laravel: [11.x]
        stability: [prefer-lowest, prefer-stable]

    name: Static Analysis - P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Run PHPStan
        run: vendor/bin/phpstan --error-format=github

  mysql:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: cachet
          MYSQL_USER: cachet
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        php: [8.3, 8.2]
        laravel: [11.x]
        stability: [prefer-lowest, prefer-stable]

    name: Tests - P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - MySQL 8.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Install frontend dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Build tests environment
        run: composer build

      - name: Execute tests
        run: composer test
        env:
          DB_CONNECTION: mysql
          DB_HOST: localhost
          DB_DATABASE: cachet
          DB_USERNAME: cachet
          DB_PASSWORD: password

  postgres:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: cachet
          POSTGRES_USER: cachet
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        php: [ 8.3, 8.2 ]
        laravel: [ 11.x ]
        stability: [ prefer-lowest, prefer-stable ]

    name: Tests - P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - PostgreSQL 13

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Install frontend dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Build tests environment
        run: composer build

      - name: Execute tests
        run: composer test
        env:
          DB_CONNECTION: mysql
          DB_HOST: localhost
          DB_DATABASE: cachet
          DB_USERNAME: cachet
          DB_PASSWORD: password

  sqlite:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ 8.3, 8.2 ]
        laravel: [ 11.x ]
        stability: [ prefer-lowest, prefer-stable ]

    name: Tests - P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - SQLite

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Install frontend dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Build tests environment
        run: composer build

      - name: Execute tests
        run: composer test

  check:
    if: always()
    needs:
      - static-analysis
      - mysql
      - postgres
      - sqlite
    runs-on: ubuntu-latest

    steps:
      - name: Check if all jobs are passing
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
